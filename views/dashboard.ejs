<!DOCTYPE html>
<html>
<head>
    <title>Dashboard - RDS App</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
            min-height: 100vh;
        }
        .navbar-brand {
            font-size: 1.5rem;
        }
        .card {
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            margin-bottom: 1.5rem;
        }
        .card-header {
            background: linear-gradient(135deg, #0d6efd 0%, #0dcaf0 100%);
            color: white;
            border: none;
            padding: 1rem 1.5rem;
        }
        .form-control:focus {
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        .items-list .card {
            transition: transform 0.2s ease;
        }
        .items-list .card:hover {
            transform: translateY(-2px);
        }
        .connection-status {
            position: fixed;
            top: 70px;
            right: 20px;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary sticky-top">
        <div class="container">
            <a class="navbar-brand" href="/"><i class="bi bi-database me-2"></i>RDS App</a>
            <div class="d-flex align-items-center">
                <span class="text-light me-3">Welcome, <%= username %>!</span>
                <a href="/logout" class="btn btn-outline-light">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container py-4">
        <!-- Database Connection Form -->
        <div id="dbConnectionForm" class="card" style="display: <%= !isConnected ? 'block' : 'none' %>">
            <div class="card-header">
                <h4 class="mb-0"><i class="bi bi-hdd-network me-2"></i>Connect to AWS RDS Database</h4>
            </div>
            <div class="card-body p-4">
                <form id="rdsConnectionForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="dbHost" class="form-label">Database Host</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-server"></i></span>
                                <input type="text" class="form-control" id="dbHost" required placeholder="your-rds-endpoint.region.rds.amazonaws.com">
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="dbName" class="form-label">Database Name</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-database"></i></span>
                                <input type="text" class="form-control" id="dbName" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="dbUser" class="form-label">Database User</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <input type="text" class="form-control" id="dbUser" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="dbPassword" class="form-label">Database Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-key"></i></span>
                                <input type="password" class="form-control" id="dbPassword" required>
                            </div>
                        </div>
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="bi bi-plug me-2"></i>Connect to Database
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Items Management Section -->
        <div id="itemsManagement" style="display: <%= isConnected ? 'block' : 'none' %>">
            <!-- Add New Item Form -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="bi bi-plus-circle me-2"></i>Add New Item</h4>
                </div>
                <div class="card-body p-4">
                    <form id="addItemForm">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="name" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control" id="description" required rows="1"></textarea>
                            </div>
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-plus-lg me-2"></i>Add Item
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Items List -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="bi bi-list-ul me-2"></i>Items List</h4>
                    <button onclick="loadItems()" class="btn btn-light">
                        <i class="bi bi-arrow-clockwise me-2"></i>Refresh
                    </button>
                </div>
                <div class="card-body p-4">
                    <div id="itemsList" class="items-list"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Handle RDS Connection
        document.getElementById('rdsConnectionForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const connectionData = {
                host: document.getElementById('dbHost').value,
                user: document.getElementById('dbUser').value,
                password: document.getElementById('dbPassword').value,
                database: document.getElementById('dbName').value
            };

            try {
                const response = await fetch('/connect-rds', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(connectionData)
                });

                if (response.ok) {
                    document.getElementById('dbConnectionForm').style.display = 'none';
                    document.getElementById('itemsManagement').style.display = 'block';
                    loadItems();
                } else {
                    const error = await response.json();
                    alert('Connection failed: ' + error.message);
                }
            } catch (error) {
                alert('Connection failed: ' + error.message);
            }
        });

        // Load items
        async function loadItems() {
            try {
                const response = await fetch('/items');
                if (response.ok) {
                    const items = await response.json();
                    const itemsList = document.getElementById('itemsList');
                    if (items.length === 0) {
                        itemsList.innerHTML = '<div class="text-center text-muted">No items found. Add your first item above!</div>';
                    } else {
                        itemsList.innerHTML = items.map(item => `
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <h5 class="card-title mb-1">${item.name}</h5>
                                            <p class="card-text text-muted mb-0">${item.description}</p>
                                        </div>
                                        <div class="btn-group">
                                            <button onclick="editItem(${item.id}, '${item.name}', '${item.description}')" 
                                                    class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button onclick="deleteItem(${item.id})" 
                                                    class="btn btn-outline-danger btn-sm">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `).join('');
                    }
                }
            } catch (error) {
                console.error('Error loading items:', error);
            }
        }

        // Add item
        document.getElementById('addItemForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const name = document.getElementById('name').value;
            const description = document.getElementById('description').value;
            
            try {
                const response = await fetch('/items', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, description })
                });
                
                if (response.ok) {
                    document.getElementById('addItemForm').reset();
                    loadItems();
                } else {
                    const error = await response.json();
                    alert('Failed to add item: ' + error.message);
                }
            } catch (error) {
                alert('Failed to add item: ' + error.message);
            }
        });

        // Delete item
        async function deleteItem(id) {
            if (confirm('Are you sure you want to delete this item?')) {
                try {
                    const response = await fetch(`/items/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        loadItems();
                    } else {
                        const error = await response.json();
                        alert('Failed to delete item: ' + error.message);
                    }
                } catch (error) {
                    alert('Failed to delete item: ' + error.message);
                }
            }
        }

        // Edit item
        async function editItem(id, name, description) {
            const newName = prompt('Enter new name:', name);
            const newDescription = prompt('Enter new description:', description);
            
            if (newName && newDescription) {
                try {
                    const response = await fetch(`/items/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ name: newName, description: newDescription })
                    });
                    
                    if (response.ok) {
                        loadItems();
                    } else {
                        const error = await response.json();
                        alert('Failed to update item: ' + error.message);
                    }
                } catch (error) {
                    alert('Failed to update item: ' + error.message);
                }
            }
        }

        // If already connected, load items immediately
        if (document.getElementById('itemsManagement').style.display === 'block') {
            loadItems();
        }
    </script>
</body>
</html>
